// Generated by CoffeeScript 1.4.0
(function() {
  var __slice = [].slice,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define([], function() {
    var mixin;
    return mixin = function() {
      var Mixin, cls, key, proto, protos, val, _i, _len, _ref;
      cls = arguments[0], protos = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      Mixin = (function(_super) {

        __extends(Mixin, _super);

        function Mixin() {
          var args, proto, _i, _len;
          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
          Mixin.__super__.constructor.apply(this, args);
          for (_i = 0, _len = protos.length; _i < _len; _i++) {
            proto = protos[_i];
            proto.prototype.constructor.call(this);
          }
        }

        return Mixin;

      })(cls);
      for (_i = 0, _len = protos.length; _i < _len; _i++) {
        proto = protos[_i];
        _ref = proto.prototype;
        for (key in _ref) {
          if (!__hasProp.call(_ref, key)) continue;
          val = _ref[key];
          if (key !== "constructor") {
            Mixin.prototype[key] = val;
          }
        }
      }
      return Mixin;
    };
  });

}).call(this);
